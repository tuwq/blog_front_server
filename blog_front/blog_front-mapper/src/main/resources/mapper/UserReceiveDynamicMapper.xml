<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="root.mapper.UserReceiveDynamicMapper" >
  <resultMap id="BaseResultMap" type="root.model.UserReceiveDynamic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="initiate_dynamic_id" property="initiateDynamicId" jdbcType="INTEGER" />
    <result column="receive_user_id" property="receiveUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="visit" property="visit" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, initiate_dynamic_id, receive_user_id, create_time, visit
  </sql>
  
  <resultMap id="initiateDynamicMap" type="root.model.UserInitiateDynamic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="action" property="action" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="initiate_user_id" property="initiateUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="getByReceiverUserId" parameterType="map" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" />
	FROM user_receive_dynamic ur
	WHERE ur.receive_user_id = #{receiveUserId}
	ORDER BY create_time desc
	LIMIT #{skip},#{pageSize}
  </select>
  
  <select id="countByReceiveUserIdAndVisit" parameterType="map" resultType="long">
   	SELECT count(1)
	FROM user_receive_dynamic
	WHERE receive_user_id = #{receiveUserId} AND visit=0
  </select>
  
  <update id="updateBatchVisit" parameterType="map">
  	UPDATE user_receive_dynamic 
  	SET `visit`=1
  	WHERE id in 
  	<foreach collection="ids" item="id" separator="," open="(" close=")">
		#{id}
	</foreach>
  </update>
  
  <select id="getIdsByReceiverUserId" parameterType="map" resultType="int">
  	SELECT ur.id
	FROM user_receive_dynamic ur
	WHERE ur.receive_user_id = #{receiveUserId}
	LIMIT #{skip},#{pageSize}
  </select>
  
  <select id="countByReceiveUserId" parameterType="map" resultType="long">
  	SELECT count(1)
	FROM user_receive_dynamic
	WHERE receive_user_id = #{receiveUserId}
  </select>
  
  <select id="getInitiateDynamicListByReceiveUserId" parameterType="map" resultMap="initiateDynamicMap">
  	SELECT ui.id id,ui.type type,ui.action action,ui.type_id type_id,ui.initiate_user_id initiate_user_id,ui.create_time create_time
	FROM user_receive_dynamic ur
	LEFT JOIN user_initiate_dynamic ui ON ui.id = ur.initiate_dynamic_id
	WHERE ur.receive_user_id = #{receiveUserId}
	ORDER BY ui.create_time desc
	LIMIT #{skip},#{pageSize}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_receive_dynamic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_receive_dynamic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="root.model.UserReceiveDynamic" >
    insert into user_receive_dynamic (id, initiate_dynamic_id, receive_user_id, 
      create_time, visit)
    values (#{id,jdbcType=INTEGER}, #{initiateDynamicId,jdbcType=INTEGER}, #{receiveUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{visit,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="root.model.UserReceiveDynamic" >
    insert into user_receive_dynamic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="initiateDynamicId != null" >
        initiate_dynamic_id,
      </if>
      <if test="receiveUserId != null" >
        receive_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="visit != null" >
        visit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="initiateDynamicId != null" >
        #{initiateDynamicId,jdbcType=INTEGER},
      </if>
      <if test="receiveUserId != null" >
        #{receiveUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="visit != null" >
        #{visit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="root.model.UserReceiveDynamic" >
    update user_receive_dynamic
    <set >
      <if test="initiateDynamicId != null" >
        initiate_dynamic_id = #{initiateDynamicId,jdbcType=INTEGER},
      </if>
      <if test="receiveUserId != null" >
        receive_user_id = #{receiveUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="visit != null" >
        visit = #{visit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="root.model.UserReceiveDynamic" >
    update user_receive_dynamic
    set initiate_dynamic_id = #{initiateDynamicId,jdbcType=INTEGER},
      receive_user_id = #{receiveUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      visit = #{visit,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>