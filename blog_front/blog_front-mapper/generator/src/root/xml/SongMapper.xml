<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="root.mapper.SongMapper" >
  <resultMap id="BaseResultMap" type="root.model.Song" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="song_name" property="songName" jdbcType="VARCHAR" />
    <result column="singer" property="singer" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="load_sum" property="loadSum" jdbcType="INTEGER" />
    <result column="praise" property="praise" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="duration" property="duration" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="root.model.Song" extends="BaseResultMap" >
    <result column="lyric" property="lyric" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, song_name, singer, cover, url, load_sum, praise, weight, duration, create_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List" >
    lyric
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="root.model.Song" >
    insert into song (id, song_name, singer, 
      cover, url, load_sum, 
      praise, weight, duration, 
      create_time, update_time, lyric
      )
    values (#{id,jdbcType=INTEGER}, #{songName,jdbcType=VARCHAR}, #{singer,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{loadSum,jdbcType=INTEGER}, 
      #{praise,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, #{duration,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{lyric,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="root.model.Song" >
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="songName != null" >
        song_name,
      </if>
      <if test="singer != null" >
        singer,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="loadSum != null" >
        load_sum,
      </if>
      <if test="praise != null" >
        praise,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lyric != null" >
        lyric,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="songName != null" >
        #{songName,jdbcType=VARCHAR},
      </if>
      <if test="singer != null" >
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="loadSum != null" >
        #{loadSum,jdbcType=INTEGER},
      </if>
      <if test="praise != null" >
        #{praise,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lyric != null" >
        #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="root.model.Song" >
    update song
    <set >
      <if test="songName != null" >
        song_name = #{songName,jdbcType=VARCHAR},
      </if>
      <if test="singer != null" >
        singer = #{singer,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="loadSum != null" >
        load_sum = #{loadSum,jdbcType=INTEGER},
      </if>
      <if test="praise != null" >
        praise = #{praise,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lyric != null" >
        lyric = #{lyric,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="root.model.Song" >
    update song
    set song_name = #{songName,jdbcType=VARCHAR},
      singer = #{singer,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      load_sum = #{loadSum,jdbcType=INTEGER},
      praise = #{praise,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      duration = #{duration,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      lyric = #{lyric,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="root.model.Song" >
    update song
    set song_name = #{songName,jdbcType=VARCHAR},
      singer = #{singer,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      load_sum = #{loadSum,jdbcType=INTEGER},
      praise = #{praise,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      duration = #{duration,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>