<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="root.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="root.model.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="face_cover" property="faceCover" jdbcType="VARCHAR" />
    <result column="praise" property="praise" jdbcType="INTEGER" />
    <result column="comment_sum" property="commentSum" jdbcType="INTEGER" />
    <result column="browse_sum" property="browseSum" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="approval" property="approval" jdbcType="INTEGER" />
    <result column="oppose" property="oppose" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="root.model.Article" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, title, face_cover, praise, comment_sum, browse_sum, status, weight, 
    create_time, update_time, approval, oppose
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="root.model.Article" >
    insert into article (id, user_id, title, 
      face_cover, praise, comment_sum, 
      browse_sum, status, weight, 
      create_time, update_time, approval, 
      oppose, content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{faceCover,jdbcType=VARCHAR}, #{praise,jdbcType=INTEGER}, #{commentSum,jdbcType=INTEGER}, 
      #{browseSum,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{approval,jdbcType=INTEGER}, 
      #{oppose,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="root.model.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="faceCover != null" >
        face_cover,
      </if>
      <if test="praise != null" >
        praise,
      </if>
      <if test="commentSum != null" >
        comment_sum,
      </if>
      <if test="browseSum != null" >
        browse_sum,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="approval != null" >
        approval,
      </if>
      <if test="oppose != null" >
        oppose,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="faceCover != null" >
        #{faceCover,jdbcType=VARCHAR},
      </if>
      <if test="praise != null" >
        #{praise,jdbcType=INTEGER},
      </if>
      <if test="commentSum != null" >
        #{commentSum,jdbcType=INTEGER},
      </if>
      <if test="browseSum != null" >
        #{browseSum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approval != null" >
        #{approval,jdbcType=INTEGER},
      </if>
      <if test="oppose != null" >
        #{oppose,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="root.model.Article" >
    update article
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="faceCover != null" >
        face_cover = #{faceCover,jdbcType=VARCHAR},
      </if>
      <if test="praise != null" >
        praise = #{praise,jdbcType=INTEGER},
      </if>
      <if test="commentSum != null" >
        comment_sum = #{commentSum,jdbcType=INTEGER},
      </if>
      <if test="browseSum != null" >
        browse_sum = #{browseSum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approval != null" >
        approval = #{approval,jdbcType=INTEGER},
      </if>
      <if test="oppose != null" >
        oppose = #{oppose,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="root.model.Article" >
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      face_cover = #{faceCover,jdbcType=VARCHAR},
      praise = #{praise,jdbcType=INTEGER},
      comment_sum = #{commentSum,jdbcType=INTEGER},
      browse_sum = #{browseSum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      approval = #{approval,jdbcType=INTEGER},
      oppose = #{oppose,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="root.model.Article" >
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      face_cover = #{faceCover,jdbcType=VARCHAR},
      praise = #{praise,jdbcType=INTEGER},
      comment_sum = #{commentSum,jdbcType=INTEGER},
      browse_sum = #{browseSum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      approval = #{approval,jdbcType=INTEGER},
      oppose = #{oppose,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>