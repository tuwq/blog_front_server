<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="root.mapper.UserInitiateDynamicMapper" >
  <resultMap id="BaseResultMap" type="root.model.UserInitiateDynamic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="action" property="action" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="initiate_user_id" property="initiateUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, action, type_id, initiate_user_id, create_time
  </sql>
  
  <select id="getListByInitiateUserId" parameterType="map" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" />
	FROM user_initiate_dynamic
	WHERE initiate_user_id = #{initiateUserId}
	ORDER BY create_time desc
	LIMIT #{skip},#{pageSize}
  </select>
  
  <select id="countByInitiateUserId" parameterType="map" resultType="long">
  	SELECT count(1)
	FROM user_initiate_dynamic
	WHERE initiate_user_id = #{initiateUserId}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_initiate_dynamic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_initiate_dynamic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="root.model.UserInitiateDynamic" >
    insert into user_initiate_dynamic (id, type, action, 
      type_id, initiate_user_id, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{action,jdbcType=INTEGER}, 
      #{typeId,jdbcType=INTEGER}, #{initiateUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="root.model.UserInitiateDynamic" keyProperty="id" useGeneratedKeys="true">
    insert into user_initiate_dynamic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="action != null" >
        action,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="initiateUserId != null" >
        initiate_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        #{action,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="initiateUserId != null" >
        #{initiateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="root.model.UserInitiateDynamic" >
    update user_initiate_dynamic
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        action = #{action,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="initiateUserId != null" >
        initiate_user_id = #{initiateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="root.model.UserInitiateDynamic" >
    update user_initiate_dynamic
    set type = #{type,jdbcType=INTEGER},
      action = #{action,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      initiate_user_id = #{initiateUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>