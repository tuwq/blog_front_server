<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="root.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="root.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="praise" property="praise" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="activation_code" property="activationCode" jdbcType="VARCHAR" />
    <result column="activation_status" property="activationStatus" jdbcType="INTEGER" />
    <result column="follower_sum" property="followerSum" jdbcType="INTEGER" />
    <result column="fans_sum" property="fansSum" jdbcType="INTEGER" />
    <result column="comment_sum" property="commentSum" jdbcType="INTEGER" />
    <result column="article_sum" property="articleSum" jdbcType="INTEGER" />
    <result column="before_login_ip" property="beforeLoginIp" jdbcType="VARCHAR" />
    <result column="now_login_ip" property="nowLoginIp" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, email, `password`, nickname, `desc`, website, avatar, praise, `status`, activation_code, 
    activation_status, follower_sum, fans_sum, comment_sum, article_sum, before_login_ip, 
    now_login_ip, create_time, operate_time
  </sql>
  
  <select id="updatePass" parameterType="map">
  	UPDATE `user`
  	SET `password`=#{password}
  	WHERE id = #{id}
  </select>
  
  <select id="commentSumIncr" parameterType="map">
  	UPDATE `user`
	SET comment_sum = comment_sum+1
	WHERE id = #{id}
  </select>
  
  <select id="getListByIdList" parameterType="map" resultMap="BaseResultMap">
  	SELECT id,nickname,`desc`,avatar
    FROM `user`
    WHERE id IN
    <foreach collection="idList" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
 
  <select id="countById" parameterType="map" resultType="int">
  	SELECT count(1)
	FROM `user`
	WHERE id = #{id}
  </select>
 
  <select id="countByNickName" parameterType="map" resultType="int">
  	SELECT count(1)
	FROM `user`
	WHERE nickname = #{nickname}
  </select>
  
  <select id="InfoById" parameterType="map" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from `user`
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="countByUsernameOrEmail" resultType="int">
  	SELECT count(1)
	FROM `user`
	WHERE username = #{loginname} OR email = #{loginname}
  </select>
  
  <select id="getByUsernameOrEmail" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List" />
	FROM `user`
	WHERE username = #{loginname} OR email = #{loginname}
  </select>
    
  <select id="getByEmail" parameterType="map" resultMap="BaseResultMap"> 
  	SELECT <include refid="Base_Column_List" />
  	FROM `user`
  	WHERE email = #{email}
  </select>
  
  <select id="getByActivationCode" parameterType="map" resultMap="BaseResultMap"> 
   SELECT <include refid="Base_Column_List" />
   FROM `user`
   WHERE activation_code = #{key}
  </select>
  
  <select id="countByUsername" parameterType="map" resultType="int">
  	SELECT count(1)
  	FROM `user`
  	WHERE username = #{username}
  </select>
  
   <select id="countByEmail" parameterType="map" resultType="int">
    SELECT count(1)
  	FROM `user`
  	WHERE email = #{email}
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `user`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `user`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="root.model.User" >
    insert into `user` (id, username, email, 
      `password`, nickname, `desc`, 
      website, avatar, praise, 
      `status`, activation_code, activation_status, 
      follower_sum, fans_sum, comment_sum, 
      article_sum, before_login_ip, now_login_ip, 
      create_time, operate_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{website,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{praise,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{activationCode,jdbcType=VARCHAR}, #{activationStatus,jdbcType=INTEGER}, 
      #{followerSum,jdbcType=INTEGER}, #{fansSum,jdbcType=INTEGER}, #{commentSum,jdbcType=INTEGER}, 
      #{articleSum,jdbcType=INTEGER}, #{beforeLoginIp,jdbcType=VARCHAR}, #{nowLoginIp,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{operateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="root.model.User" >
    insert into `user`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        `password`,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="website != null" >
        website,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="praise != null" >
        praise,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="activationCode != null" >
        activation_code,
      </if>
      <if test="activationStatus != null" >
        activation_status,
      </if>
      <if test="followerSum != null" >
        follower_sum,
      </if>
      <if test="fansSum != null" >
        fans_sum,
      </if>
      <if test="commentSum != null" >
        comment_sum,
      </if>
      <if test="articleSum != null" >
        article_sum,
      </if>
      <if test="beforeLoginIp != null" >
        before_login_ip,
      </if>
      <if test="nowLoginIp != null" >
        now_login_ip,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="praise != null" >
        #{praise,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="activationCode != null" >
        #{activationCode,jdbcType=VARCHAR},
      </if>
      <if test="activationStatus != null" >
        #{activationStatus,jdbcType=INTEGER},
      </if>
      <if test="followerSum != null" >
        #{followerSum,jdbcType=INTEGER},
      </if>
      <if test="fansSum != null" >
        #{fansSum,jdbcType=INTEGER},
      </if>
      <if test="commentSum != null" >
        #{commentSum,jdbcType=INTEGER},
      </if>
      <if test="articleSum != null" >
        #{articleSum,jdbcType=INTEGER},
      </if>
      <if test="beforeLoginIp != null" >
        #{beforeLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="nowLoginIp != null" >
        #{nowLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="root.model.User" >
    update `user`
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="praise != null" >
        praise = #{praise,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="activationCode != null" >
        activation_code = #{activationCode,jdbcType=VARCHAR},
      </if>
      <if test="activationStatus != null" >
        activation_status = #{activationStatus,jdbcType=INTEGER},
      </if>
      <if test="followerSum != null" >
        follower_sum = #{followerSum,jdbcType=INTEGER},
      </if>
      <if test="fansSum != null" >
        fans_sum = #{fansSum,jdbcType=INTEGER},
      </if>
      <if test="commentSum != null" >
        comment_sum = #{commentSum,jdbcType=INTEGER},
      </if>
      <if test="articleSum != null" >
        article_sum = #{articleSum,jdbcType=INTEGER},
      </if>
      <if test="beforeLoginIp != null" >
        before_login_ip = #{beforeLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="nowLoginIp != null" >
        now_login_ip = #{nowLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="root.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      praise = #{praise,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      activation_code = #{activationCode,jdbcType=VARCHAR},
      activation_status = #{activationStatus,jdbcType=INTEGER},
      follower_sum = #{followerSum,jdbcType=INTEGER},
      fans_sum = #{fansSum,jdbcType=INTEGER},
      comment_sum = #{commentSum,jdbcType=INTEGER},
      article_sum = #{articleSum,jdbcType=INTEGER},
      before_login_ip = #{beforeLoginIp,jdbcType=VARCHAR},
      now_login_ip = #{nowLoginIp,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>